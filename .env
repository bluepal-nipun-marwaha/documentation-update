# Generated by setup_models.py - Complete Local Configuration
# ==============================================================================
# AI/LLM CONFIGURATION
# ==============================================================================

# LLM Provider Configuration
LLM_PROVIDER=ollama
LLM_MODEL=phi3:3.8b

# Embeddings Provider Configuration
EMBEDDINGS_PROVIDER=nomic
EMBEDDINGS_MODEL=nomic-embed-text

# Ollama Configuration (for local models)
OLLAMA_BASE_URL=http://localhost:11434
USE_GPU=true
GPU_LAYERS=-1

# ==============================================================================
# DATABASE CONFIGURATION (ArangoDB)
# ==============================================================================

# ArangoDB connection settings - defaults work with docker-compose
ARANGO_HOST=localhost
ARANGO_PORT=8529
ARANGO_USERNAME=root
ARANGO_PASSWORD=openSesame
ARANGO_DATABASE=mcp_documents

# ==============================================================================
# SERVER CONFIGURATION
# ==============================================================================

# gRPC server settings
SERVER_HOST=0.0.0.0
SERVER_PORT=50061
SERVER_MAX_WORKERS=10

# Webhook HTTP server settings
WEBHOOK_HOST=0.0.0.0
WEBHOOK_PORT=8000

# ==============================================================================
# LOGGING CONFIGURATION
# ==============================================================================

# Logging settings
LOG_LEVEL=INFO
LOG_FORMAT=json

# ==============================================================================
# NGROK CONFIGURATION (Required for Webhooks)
# ==============================================================================

# Ngrok tunnel URL - GET FROM: ngrok http 8000
# This creates a public URL that forwards to your local webhook server
NGROK_BASE_URL=https://bfabf494477c.ngrok-free.app

# ==============================================================================
# VCS CONFIGURATION (Optional - for uploading updated docs)
# ==============================================================================

# GitHub access token for repository operations - GET FROM: https://github.com/settings/tokens
# Required if you want the system to automatically upload updated documentation
GITHUB_TOKEN=

# GitLab access token for repository operations - GET FROM: https://gitlab.com/-/profile/personal_access_tokens
# Required if you want the system to automatically upload updated documentation
GITLAB_TOKEN=
GITLAB_BASE_URL=https://gitlab.com
GITLAB_PROJECT_ID=
GITLAB_DOCS_BRANCH=main

# Webhook secret for validating incoming webhooks
# Set this same secret in your GitHub/GitLab webhook settings for security
WEBHOOK_SECRET=git_token_secret

# ==============================================================================
# DOCUMENT PROCESSING CONFIGURATION
# ==============================================================================

# File paths for document storage and processing
DOCUMENT_STORAGE_PATH=documents
DOCUMENT_BACKUP_PATH=rework/backups
DOCUMENT_AUDIT_LOG_PATH=rework/audit/audit.log

# ==============================================================================
# DEVELOPMENT/TESTING CONFIGURATION
# ==============================================================================

# Set to 'development' for local testing, 'production' for deployment
ENVIRONMENT=development

# Enable debug mode (set to 'true' for verbose logging)
DEBUG=false

# ==============================================================================
# API KEYS (Add your keys below if using remote providers)
# ==============================================================================

# OpenAI Configuration
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4o
OPENAI_EMBEDDINGS_MODEL=text-embedding-3-large
OPENAI_BASE_URL=https://api.openai.com/v1

# Anthropic Configuration
ANTHROPIC_API_KEY=
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022

# Mistral Configuration
MISTRAL_API_KEY=
MISTRAL_MODEL=mistral-large-latest

# Cohere Configuration
COHERE_API_KEY=
COHERE_MODEL=command-r-plus
COHERE_EMBEDDINGS_MODEL=embed-english-v3.0

# Gemini Configuration
GEMINI_API_KEY=
GEMINI_EMBEDDINGS_MODEL=text-embedding-004

# ==============================================================================
# QUICK SETUP INSTRUCTIONS
# ==============================================================================
# 1. Fill in your API keys above if using remote providers
# 2. Set your GitLab/GitHub tokens if using VCS integration
# 3. Run: poetry install && poetry run python scripts/generate_protobuf.py
# 4. Start server: poetry run rework-server
# 5. Configure repositories using the /configure endpoint
# 6. Test with a commit to your GitHub/GitLab repository